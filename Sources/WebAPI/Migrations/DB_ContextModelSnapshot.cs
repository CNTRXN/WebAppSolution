// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebAPI.DataContext;

#nullable disable

namespace WebAPI.Migrations
{
    [DbContext(typeof(DB_Context))]
    partial class DB_ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ModelLib.Model.Cabinet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Floor")
                        .HasColumnType("integer");

                    b.Property<double>("Height")
                        .HasColumnType("double precision");

                    b.Property<double>("Length")
                        .HasColumnType("double precision");

                    b.Property<int>("Num")
                        .HasColumnType("integer");

                    b.Property<int>("PlanNum")
                        .HasColumnType("integer");

                    b.Property<int?>("ResponsiblePersonId")
                        .HasColumnType("integer");

                    b.Property<double>("Width")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("Num")
                        .IsUnique();

                    b.HasIndex("PlanNum")
                        .IsUnique();

                    b.HasIndex("ResponsiblePersonId");

                    b.ToTable("Кабинеты");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Floor = 0,
                            Height = 181.0,
                            Length = 385.0,
                            Num = 216942,
                            PlanNum = 15340,
                            ResponsiblePersonId = 2,
                            Width = 173.0
                        },
                        new
                        {
                            Id = 2,
                            Floor = 0,
                            Height = 242.0,
                            Length = 117.0,
                            Num = 170214,
                            PlanNum = 14906,
                            ResponsiblePersonId = 5,
                            Width = 369.0
                        },
                        new
                        {
                            Id = 3,
                            Floor = 0,
                            Height = 407.0,
                            Length = 330.0,
                            Num = 219124,
                            PlanNum = 37563,
                            ResponsiblePersonId = 6,
                            Width = 210.0
                        },
                        new
                        {
                            Id = 4,
                            Floor = 1,
                            Height = 212.0,
                            Length = 220.0,
                            Num = 226610,
                            PlanNum = 13319,
                            ResponsiblePersonId = 3,
                            Width = 209.0
                        },
                        new
                        {
                            Id = 5,
                            Floor = 2,
                            Height = 174.0,
                            Length = 478.0,
                            Num = 384818,
                            PlanNum = 12592,
                            ResponsiblePersonId = 8,
                            Width = 139.0
                        },
                        new
                        {
                            Id = 6,
                            Floor = 0,
                            Height = 253.0,
                            Length = 243.0,
                            Num = 308721,
                            PlanNum = 38563,
                            ResponsiblePersonId = 7,
                            Width = 418.0
                        },
                        new
                        {
                            Id = 7,
                            Floor = 0,
                            Height = 358.0,
                            Length = 206.0,
                            Num = 260214,
                            PlanNum = 30715,
                            ResponsiblePersonId = 4,
                            Width = 227.0
                        },
                        new
                        {
                            Id = 8,
                            Floor = 2,
                            Height = 199.0,
                            Length = 427.0,
                            Num = 201148,
                            PlanNum = 11533,
                            ResponsiblePersonId = 1,
                            Width = 130.0
                        },
                        new
                        {
                            Id = 9,
                            Floor = 2,
                            Height = 277.0,
                            Length = 276.0,
                            Num = 312535,
                            PlanNum = 36457,
                            Width = 325.0
                        },
                        new
                        {
                            Id = 10,
                            Floor = 1,
                            Height = 165.0,
                            Length = 175.0,
                            Num = 286527,
                            PlanNum = 13197,
                            Width = 366.0
                        },
                        new
                        {
                            Id = 11,
                            Floor = 1,
                            Height = 323.0,
                            Length = 183.0,
                            Num = 301945,
                            PlanNum = 11326,
                            Width = 472.0
                        },
                        new
                        {
                            Id = 12,
                            Floor = 0,
                            Height = 359.0,
                            Length = 141.0,
                            Num = 103322,
                            PlanNum = 13989,
                            Width = 343.0
                        },
                        new
                        {
                            Id = 13,
                            Floor = 1,
                            Height = 419.0,
                            Length = 483.0,
                            Num = 192411,
                            PlanNum = 37925,
                            Width = 429.0
                        },
                        new
                        {
                            Id = 14,
                            Floor = 2,
                            Height = 407.0,
                            Length = 401.0,
                            Num = 179146,
                            PlanNum = 37056,
                            Width = 240.0
                        },
                        new
                        {
                            Id = 15,
                            Floor = 2,
                            Height = 126.0,
                            Length = 422.0,
                            Num = 149611,
                            PlanNum = 39183,
                            Width = 161.0
                        },
                        new
                        {
                            Id = 16,
                            Floor = 2,
                            Height = 141.0,
                            Length = 493.0,
                            Num = 338129,
                            PlanNum = 35671,
                            Width = 219.0
                        },
                        new
                        {
                            Id = 17,
                            Floor = 2,
                            Height = 475.0,
                            Length = 288.0,
                            Num = 367715,
                            PlanNum = 18299,
                            Width = 318.0
                        },
                        new
                        {
                            Id = 18,
                            Floor = 0,
                            Height = 414.0,
                            Length = 381.0,
                            Num = 255442,
                            PlanNum = 31633,
                            Width = 405.0
                        },
                        new
                        {
                            Id = 19,
                            Floor = 0,
                            Height = 431.0,
                            Length = 263.0,
                            Num = 330415,
                            PlanNum = 29661,
                            Width = 349.0
                        });
                });

            modelBuilder.Entity("ModelLib.Model.CabinetEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CabinetId")
                        .HasColumnType("integer");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CabinetId");

                    b.HasIndex("EquipmentId");

                    b.ToTable("Оборудование в кабинетах");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CabinetId = 1,
                            EquipmentId = 1
                        },
                        new
                        {
                            Id = 2,
                            CabinetId = 1,
                            EquipmentId = 4
                        });
                });

            modelBuilder.Entity("ModelLib.Model.CabinetFiles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CabinetId")
                        .HasColumnType("integer");

                    b.Property<int?>("FileAuthor")
                        .HasColumnType("integer");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CabinetId");

                    b.HasIndex("FileAuthor");

                    b.ToTable("Файлы кабинета");
                });

            modelBuilder.Entity("ModelLib.Model.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InventoryNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("InventoryNumber")
                        .IsUnique();

                    b.HasIndex("TypeId");

                    b.ToTable("Оборудование");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Сис. требования: ",
                            InventoryNumber = "10892",
                            Name = "Монитор",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Сис. требования: ",
                            InventoryNumber = "11090",
                            Name = "Монитор",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Сис. требования: ",
                            InventoryNumber = "10975",
                            Name = "Системный блок",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 4,
                            Description = "Сис. требования: ",
                            InventoryNumber = "11296",
                            Name = "Системный блок",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 5,
                            Description = "Сис. требования: ",
                            InventoryNumber = "12095",
                            Name = "Мышка",
                            TypeId = 1
                        });
                });

            modelBuilder.Entity("ModelLib.Model.EquipmentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Типы оборудования");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Электрооборудование"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Мебель"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Инфраструктура"
                        });
                });

            modelBuilder.Entity("ModelLib.Model.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Права доступа");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "User"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Master"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("ModelLib.Model.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CabId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CompleteDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("FromId")
                        .HasColumnType("integer");

                    b.Property<int>("RequestStatusId")
                        .HasColumnType("integer");

                    b.Property<int>("RequestTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CabId");

                    b.HasIndex("FromId");

                    b.HasIndex("RequestStatusId");

                    b.HasIndex("RequestTypeId");

                    b.ToTable("Заявки");
                });

            modelBuilder.Entity("ModelLib.Model.RequestEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EquipmentId")
                        .HasColumnType("integer");

                    b.Property<int>("RequestId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("RequestId");

                    b.ToTable("Оборудование заявок");
                });

            modelBuilder.Entity("ModelLib.Model.RequestFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RequestId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RequestId");

                    b.ToTable("Файлы заявки");
                });

            modelBuilder.Entity("ModelLib.Model.RequestStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StatusName")
                        .IsUnique();

                    b.ToTable("Статус заявки");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            StatusName = "Новая"
                        },
                        new
                        {
                            Id = 2,
                            StatusName = "В обработке"
                        },
                        new
                        {
                            Id = 3,
                            StatusName = "Ожидание материалов"
                        },
                        new
                        {
                            Id = 4,
                            StatusName = "Выполняется"
                        },
                        new
                        {
                            Id = 5,
                            StatusName = "Выполнена"
                        },
                        new
                        {
                            Id = 6,
                            StatusName = "Отклонена"
                        },
                        new
                        {
                            Id = 7,
                            StatusName = "Отложена"
                        },
                        new
                        {
                            Id = 8,
                            StatusName = "Просрочена"
                        });
                });

            modelBuilder.Entity("ModelLib.Model.RequestType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TypeName")
                        .IsUnique();

                    b.ToTable("Тип заявки");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TypeName = "Ремонт"
                        },
                        new
                        {
                            Id = 2,
                            TypeName = "Тех. обслуживание"
                        },
                        new
                        {
                            Id = 3,
                            TypeName = "Закупка"
                        },
                        new
                        {
                            Id = 4,
                            TypeName = "Установка"
                        },
                        new
                        {
                            Id = 5,
                            TypeName = "Консультация"
                        });
                });

            modelBuilder.Entity("ModelLib.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Patronymic")
                        .HasColumnType("text");

                    b.Property<int>("PermissionId")
                        .HasColumnType("integer");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.HasIndex("PermissionId");

                    b.ToTable("Пользователи");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthday = new DateTime(2000, 3, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_1",
                            Name = "Name-1",
                            Password = "password_1",
                            Patronymic = "Patronymic1",
                            PermissionId = 1,
                            Surname = "Surname-1"
                        },
                        new
                        {
                            Id = 2,
                            Birthday = new DateTime(1994, 3, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_2",
                            Name = "Name-2",
                            Password = "password_2",
                            Patronymic = "Patronymic2",
                            PermissionId = 1,
                            Surname = "Surname-2"
                        },
                        new
                        {
                            Id = 3,
                            Birthday = new DateTime(1997, 7, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_3",
                            Name = "Name-3",
                            Password = "password_3",
                            Patronymic = "Patronymic3",
                            PermissionId = 1,
                            Surname = "Surname-3"
                        },
                        new
                        {
                            Id = 4,
                            Birthday = new DateTime(1998, 10, 27, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_4",
                            Name = "Name-4",
                            Password = "password_4",
                            Patronymic = "Patronymic4",
                            PermissionId = 1,
                            Surname = "Surname-4"
                        },
                        new
                        {
                            Id = 5,
                            Birthday = new DateTime(1991, 5, 27, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_5",
                            Name = "Name-5",
                            Password = "password_5",
                            Patronymic = "Patronymic5",
                            PermissionId = 1,
                            Surname = "Surname-5"
                        },
                        new
                        {
                            Id = 6,
                            Birthday = new DateTime(1993, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_6",
                            Name = "Name-6",
                            Password = "password_6",
                            PermissionId = 1,
                            Surname = "Surname-6"
                        },
                        new
                        {
                            Id = 7,
                            Birthday = new DateTime(1998, 5, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_7",
                            Name = "Name-7",
                            Password = "password_7",
                            Patronymic = "Patronymic7",
                            PermissionId = 1,
                            Surname = "Surname-7"
                        },
                        new
                        {
                            Id = 8,
                            Birthday = new DateTime(1992, 9, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_8",
                            Name = "Name-8",
                            Password = "password_8",
                            PermissionId = 1,
                            Surname = "Surname-8"
                        },
                        new
                        {
                            Id = 9,
                            Birthday = new DateTime(2004, 9, 22, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_9",
                            Name = "Name-9",
                            Password = "password_9",
                            Patronymic = "Patronymic9",
                            PermissionId = 1,
                            Surname = "Surname-9"
                        });
                });

            modelBuilder.Entity("ModelLib.Model.Cabinet", b =>
                {
                    b.HasOne("ModelLib.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("ResponsiblePersonId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ModelLib.Model.CabinetEquipment", b =>
                {
                    b.HasOne("ModelLib.Model.Cabinet", "Cabinet")
                        .WithMany()
                        .HasForeignKey("CabinetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelLib.Model.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cabinet");

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("ModelLib.Model.CabinetFiles", b =>
                {
                    b.HasOne("ModelLib.Model.Cabinet", "Cabinet")
                        .WithMany()
                        .HasForeignKey("CabinetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelLib.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("FileAuthor");

                    b.Navigation("Cabinet");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ModelLib.Model.Equipment", b =>
                {
                    b.HasOne("ModelLib.Model.EquipmentType", "EquipmentType")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EquipmentType");
                });

            modelBuilder.Entity("ModelLib.Model.Request", b =>
                {
                    b.HasOne("ModelLib.Model.Cabinet", "Cabinet")
                        .WithMany()
                        .HasForeignKey("CabId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelLib.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("FromId");

                    b.HasOne("ModelLib.Model.RequestStatus", "RequestStatus")
                        .WithMany()
                        .HasForeignKey("RequestStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelLib.Model.RequestType", "RequestType")
                        .WithMany()
                        .HasForeignKey("RequestTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cabinet");

                    b.Navigation("RequestStatus");

                    b.Navigation("RequestType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ModelLib.Model.RequestEquipment", b =>
                {
                    b.HasOne("ModelLib.Model.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelLib.Model.Request", "Request")
                        .WithMany()
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("ModelLib.Model.RequestFile", b =>
                {
                    b.HasOne("ModelLib.Model.Request", "Request")
                        .WithMany()
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Request");
                });

            modelBuilder.Entity("ModelLib.Model.User", b =>
                {
                    b.HasOne("ModelLib.Model.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");
                });
#pragma warning restore 612, 618
        }
    }
}
