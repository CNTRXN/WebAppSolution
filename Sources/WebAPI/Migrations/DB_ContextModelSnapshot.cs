// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebAPI.DataContext;

#nullable disable

namespace WebAPI.Migrations
{
    [DbContext(typeof(DB_Context))]
    partial class DB_ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebAPI.DataContext.Models.AccountStat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ExpirationKeyDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SignInKey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SignInKey")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("AccountStats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExpirationKeyDate = new DateTime(2024, 3, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            SignInKey = "f4ba7aaa-1590-4919-912c-c9ef5dd6ee25",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.CabEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CabId")
                        .HasColumnType("integer");

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<int>("EquipId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CabId");

                    b.HasIndex("EquipId");

                    b.ToTable("Оборудование в кабинетах");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.CabPhoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CabId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ImageAuthor")
                        .HasColumnType("integer");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CabId");

                    b.HasIndex("ImageAuthor");

                    b.ToTable("Фотографии кабинета");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.Cabinet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Floor")
                        .HasColumnType("integer");

                    b.Property<int>("Group")
                        .HasColumnType("integer");

                    b.Property<double>("Height")
                        .HasColumnType("double precision");

                    b.Property<double>("Length")
                        .HasColumnType("double precision");

                    b.Property<int>("Num")
                        .HasColumnType("integer");

                    b.Property<int>("PlanNum")
                        .HasColumnType("integer");

                    b.Property<int>("ResponsiblePersonId")
                        .HasColumnType("integer");

                    b.Property<double>("Width")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("ResponsiblePersonId");

                    b.ToTable("Кабинеты");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Floor = 2,
                            Group = 3472,
                            Height = 296.0,
                            Length = 343.0,
                            Num = 347237,
                            PlanNum = 12088,
                            ResponsiblePersonId = 5,
                            Width = 263.0
                        },
                        new
                        {
                            Id = 2,
                            Floor = 2,
                            Group = 1189,
                            Height = 122.0,
                            Length = 252.0,
                            Num = 118939,
                            PlanNum = 16838,
                            ResponsiblePersonId = 7,
                            Width = 478.0
                        },
                        new
                        {
                            Id = 3,
                            Floor = 1,
                            Group = 3541,
                            Height = 468.0,
                            Length = 395.0,
                            Num = 354138,
                            PlanNum = 26409,
                            ResponsiblePersonId = 3,
                            Width = 238.0
                        },
                        new
                        {
                            Id = 4,
                            Floor = 1,
                            Group = 1513,
                            Height = 461.0,
                            Length = 303.0,
                            Num = 151310,
                            PlanNum = 28390,
                            ResponsiblePersonId = 5,
                            Width = 481.0
                        },
                        new
                        {
                            Id = 5,
                            Floor = 2,
                            Group = 1489,
                            Height = 442.0,
                            Length = 267.0,
                            Num = 148910,
                            PlanNum = 29773,
                            ResponsiblePersonId = 4,
                            Width = 168.0
                        },
                        new
                        {
                            Id = 6,
                            Floor = 0,
                            Group = 1535,
                            Height = 103.0,
                            Length = 231.0,
                            Num = 153530,
                            PlanNum = 29928,
                            ResponsiblePersonId = 3,
                            Width = 437.0
                        },
                        new
                        {
                            Id = 7,
                            Floor = 0,
                            Group = 1126,
                            Height = 430.0,
                            Length = 286.0,
                            Num = 112645,
                            PlanNum = 35884,
                            ResponsiblePersonId = 4,
                            Width = 394.0
                        },
                        new
                        {
                            Id = 8,
                            Floor = 1,
                            Group = 2801,
                            Height = 373.0,
                            Length = 353.0,
                            Num = 280120,
                            PlanNum = 13202,
                            ResponsiblePersonId = 7,
                            Width = 115.0
                        },
                        new
                        {
                            Id = 9,
                            Floor = 1,
                            Group = 1566,
                            Height = 358.0,
                            Length = 301.0,
                            Num = 156629,
                            PlanNum = 39296,
                            ResponsiblePersonId = 3,
                            Width = 275.0
                        },
                        new
                        {
                            Id = 10,
                            Floor = 1,
                            Group = 1152,
                            Height = 335.0,
                            Length = 300.0,
                            Num = 115247,
                            PlanNum = 36829,
                            ResponsiblePersonId = 3,
                            Width = 350.0
                        },
                        new
                        {
                            Id = 11,
                            Floor = 0,
                            Group = 3361,
                            Height = 394.0,
                            Length = 351.0,
                            Num = 336114,
                            PlanNum = 36726,
                            ResponsiblePersonId = 2,
                            Width = 131.0
                        },
                        new
                        {
                            Id = 12,
                            Floor = 1,
                            Group = 3620,
                            Height = 457.0,
                            Length = 175.0,
                            Num = 362035,
                            PlanNum = 25020,
                            ResponsiblePersonId = 6,
                            Width = 349.0
                        },
                        new
                        {
                            Id = 13,
                            Floor = 2,
                            Group = 2626,
                            Height = 110.0,
                            Length = 226.0,
                            Num = 262643,
                            PlanNum = 18753,
                            ResponsiblePersonId = 7,
                            Width = 121.0
                        },
                        new
                        {
                            Id = 14,
                            Floor = 0,
                            Group = 2576,
                            Height = 224.0,
                            Length = 170.0,
                            Num = 257614,
                            PlanNum = 30775,
                            ResponsiblePersonId = 1,
                            Width = 232.0
                        },
                        new
                        {
                            Id = 15,
                            Floor = 0,
                            Group = 1636,
                            Height = 109.0,
                            Length = 185.0,
                            Num = 163634,
                            PlanNum = 18169,
                            ResponsiblePersonId = 2,
                            Width = 162.0
                        },
                        new
                        {
                            Id = 16,
                            Floor = 0,
                            Group = 3277,
                            Height = 133.0,
                            Length = 498.0,
                            Num = 327738,
                            PlanNum = 12443,
                            ResponsiblePersonId = 7,
                            Width = 493.0
                        },
                        new
                        {
                            Id = 17,
                            Floor = 0,
                            Group = 2842,
                            Height = 222.0,
                            Length = 119.0,
                            Num = 284231,
                            PlanNum = 32178,
                            ResponsiblePersonId = 6,
                            Width = 467.0
                        },
                        new
                        {
                            Id = 18,
                            Floor = 1,
                            Group = 1331,
                            Height = 495.0,
                            Length = 356.0,
                            Num = 133146,
                            PlanNum = 25833,
                            ResponsiblePersonId = 4,
                            Width = 325.0
                        },
                        new
                        {
                            Id = 19,
                            Floor = 1,
                            Group = 1547,
                            Height = 117.0,
                            Length = 453.0,
                            Num = 154732,
                            PlanNum = 39553,
                            ResponsiblePersonId = 6,
                            Width = 395.0
                        });
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Оборудоввание");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.EquipmentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Типы оборудования");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Права");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Пользователь"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Мастер"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Администратор"
                        });
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AcceptanceDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CabId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CompleteDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FromId")
                        .HasColumnType("integer");

                    b.Property<int?>("ImageId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CabId");

                    b.HasIndex("FromId");

                    b.HasIndex("ImageId");

                    b.ToTable("Заявки");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Patronymic")
                        .HasColumnType("text");

                    b.Property<int>("PermissionId")
                        .HasColumnType("integer");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.ToTable("Пользователи");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthday = new DateTime(1993, 9, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_1",
                            Name = "Name-1",
                            Password = "password_1",
                            Patronymic = "Patronymic1",
                            PermissionId = 2,
                            Surname = "Surname-1"
                        },
                        new
                        {
                            Id = 2,
                            Birthday = new DateTime(2000, 6, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_2",
                            Name = "Name-2",
                            Password = "password_2",
                            PermissionId = 1,
                            Surname = "Surname-2"
                        },
                        new
                        {
                            Id = 3,
                            Birthday = new DateTime(2004, 8, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_3",
                            Name = "Name-3",
                            Password = "password_3",
                            Patronymic = "Patronymic3",
                            PermissionId = 1,
                            Surname = "Surname-3"
                        },
                        new
                        {
                            Id = 4,
                            Birthday = new DateTime(1992, 3, 21, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_4",
                            Name = "Name-4",
                            Password = "password_4",
                            Patronymic = "Patronymic4",
                            PermissionId = 2,
                            Surname = "Surname-4"
                        },
                        new
                        {
                            Id = 5,
                            Birthday = new DateTime(1997, 1, 26, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_5",
                            Name = "Name-5",
                            Password = "password_5",
                            Patronymic = "Patronymic5",
                            PermissionId = 1,
                            Surname = "Surname-5"
                        },
                        new
                        {
                            Id = 6,
                            Birthday = new DateTime(1992, 2, 19, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_6",
                            Name = "Name-6",
                            Password = "password_6",
                            Patronymic = "Patronymic6",
                            PermissionId = 1,
                            Surname = "Surname-6"
                        },
                        new
                        {
                            Id = 7,
                            Birthday = new DateTime(1998, 11, 26, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_7",
                            Name = "Name-7",
                            Password = "password_7",
                            Patronymic = "Patronymic7",
                            PermissionId = 2,
                            Surname = "Surname-7"
                        },
                        new
                        {
                            Id = 8,
                            Birthday = new DateTime(2003, 11, 18, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_8",
                            Name = "Name-8",
                            Password = "password_8",
                            PermissionId = 2,
                            Surname = "Surname-8"
                        },
                        new
                        {
                            Id = 9,
                            Birthday = new DateTime(1991, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_9",
                            Name = "Name-9",
                            Password = "password_9",
                            Patronymic = "Patronymic9",
                            PermissionId = 1,
                            Surname = "Surname-9"
                        });
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.AccountStat", b =>
                {
                    b.HasOne("WebAPI.DataContext.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.CabEquipment", b =>
                {
                    b.HasOne("WebAPI.DataContext.Models.Cabinet", "Cabinet")
                        .WithMany()
                        .HasForeignKey("CabId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.DataContext.Models.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cabinet");

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.CabPhoto", b =>
                {
                    b.HasOne("WebAPI.DataContext.Models.Cabinet", "Cabinet")
                        .WithMany()
                        .HasForeignKey("CabId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.DataContext.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("ImageAuthor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cabinet");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.Cabinet", b =>
                {
                    b.HasOne("WebAPI.DataContext.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("ResponsiblePersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.Equipment", b =>
                {
                    b.HasOne("WebAPI.DataContext.Models.EquipmentType", "EquipmentType")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EquipmentType");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.Request", b =>
                {
                    b.HasOne("WebAPI.DataContext.Models.Cabinet", "Cabinet")
                        .WithMany()
                        .HasForeignKey("CabId");

                    b.HasOne("WebAPI.DataContext.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("FromId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.DataContext.Models.CabPhoto", "CabPhoto")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.Navigation("CabPhoto");

                    b.Navigation("Cabinet");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.User", b =>
                {
                    b.HasOne("WebAPI.DataContext.Models.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");
                });
#pragma warning restore 612, 618
        }
    }
}
