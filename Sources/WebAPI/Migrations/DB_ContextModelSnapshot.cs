// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebAPI.DataContext;

#nullable disable

namespace WebAPI.Migrations
{
    [DbContext(typeof(DB_Context))]
    partial class DB_ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebAPI.DataContext.Models.AccountStat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ExpirationKeyDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SignInKey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SignInKey")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("AccountStats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExpirationKeyDate = new DateTime(2024, 3, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            SignInKey = "ebf54d3b-e3bf-4093-af54-d74fd8cf0e7b",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.CabEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CabId")
                        .HasColumnType("integer");

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<int>("EquipId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CabId");

                    b.HasIndex("EquipId");

                    b.ToTable("Оборудование в кабинетах");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.CabPhoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CabId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ImageAuthor")
                        .HasColumnType("integer");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CabId");

                    b.HasIndex("ImageAuthor");

                    b.ToTable("Фотографии кабинета");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.Cabinet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Floor")
                        .HasColumnType("integer");

                    b.Property<int>("Group")
                        .HasColumnType("integer");

                    b.Property<double>("Height")
                        .HasColumnType("double precision");

                    b.Property<double>("Length")
                        .HasColumnType("double precision");

                    b.Property<int>("Num")
                        .HasColumnType("integer");

                    b.Property<int>("PlanNum")
                        .HasColumnType("integer");

                    b.Property<int>("ResponsiblePersonId")
                        .HasColumnType("integer");

                    b.Property<double>("Width")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("ResponsiblePersonId");

                    b.ToTable("Кабинеты");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Floor = 2,
                            Group = 1767,
                            Height = 107.0,
                            Length = 295.0,
                            Num = 176737,
                            PlanNum = 20936,
                            ResponsiblePersonId = 5,
                            Width = 314.0
                        },
                        new
                        {
                            Id = 2,
                            Floor = 0,
                            Group = 1748,
                            Height = 229.0,
                            Length = 232.0,
                            Num = 174811,
                            PlanNum = 11862,
                            ResponsiblePersonId = 4,
                            Width = 198.0
                        },
                        new
                        {
                            Id = 3,
                            Floor = 0,
                            Group = 3828,
                            Height = 175.0,
                            Length = 353.0,
                            Num = 382822,
                            PlanNum = 23170,
                            ResponsiblePersonId = 3,
                            Width = 195.0
                        },
                        new
                        {
                            Id = 4,
                            Floor = 0,
                            Group = 1722,
                            Height = 215.0,
                            Length = 278.0,
                            Num = 172223,
                            PlanNum = 30791,
                            ResponsiblePersonId = 7,
                            Width = 418.0
                        },
                        new
                        {
                            Id = 5,
                            Floor = 0,
                            Group = 3949,
                            Height = 428.0,
                            Length = 456.0,
                            Num = 394917,
                            PlanNum = 20097,
                            ResponsiblePersonId = 7,
                            Width = 193.0
                        },
                        new
                        {
                            Id = 6,
                            Floor = 1,
                            Group = 3999,
                            Height = 395.0,
                            Length = 423.0,
                            Num = 399948,
                            PlanNum = 33820,
                            ResponsiblePersonId = 7,
                            Width = 107.0
                        },
                        new
                        {
                            Id = 7,
                            Floor = 0,
                            Group = 1263,
                            Height = 497.0,
                            Length = 410.0,
                            Num = 126344,
                            PlanNum = 11984,
                            ResponsiblePersonId = 3,
                            Width = 170.0
                        },
                        new
                        {
                            Id = 8,
                            Floor = 2,
                            Group = 1826,
                            Height = 373.0,
                            Length = 284.0,
                            Num = 182617,
                            PlanNum = 35537,
                            ResponsiblePersonId = 5,
                            Width = 342.0
                        },
                        new
                        {
                            Id = 9,
                            Floor = 1,
                            Group = 1145,
                            Height = 460.0,
                            Length = 332.0,
                            Num = 114535,
                            PlanNum = 14601,
                            ResponsiblePersonId = 2,
                            Width = 132.0
                        },
                        new
                        {
                            Id = 10,
                            Floor = 2,
                            Group = 3510,
                            Height = 468.0,
                            Length = 403.0,
                            Num = 351028,
                            PlanNum = 33685,
                            ResponsiblePersonId = 4,
                            Width = 191.0
                        },
                        new
                        {
                            Id = 11,
                            Floor = 2,
                            Group = 2691,
                            Height = 102.0,
                            Length = 406.0,
                            Num = 269131,
                            PlanNum = 10630,
                            ResponsiblePersonId = 3,
                            Width = 159.0
                        },
                        new
                        {
                            Id = 12,
                            Floor = 2,
                            Group = 1119,
                            Height = 308.0,
                            Length = 111.0,
                            Num = 111921,
                            PlanNum = 23146,
                            ResponsiblePersonId = 5,
                            Width = 263.0
                        },
                        new
                        {
                            Id = 13,
                            Floor = 1,
                            Group = 3193,
                            Height = 220.0,
                            Length = 156.0,
                            Num = 319340,
                            PlanNum = 13960,
                            ResponsiblePersonId = 8,
                            Width = 171.0
                        },
                        new
                        {
                            Id = 14,
                            Floor = 0,
                            Group = 1433,
                            Height = 345.0,
                            Length = 195.0,
                            Num = 143344,
                            PlanNum = 18394,
                            ResponsiblePersonId = 7,
                            Width = 268.0
                        },
                        new
                        {
                            Id = 15,
                            Floor = 1,
                            Group = 3982,
                            Height = 431.0,
                            Length = 287.0,
                            Num = 398247,
                            PlanNum = 17852,
                            ResponsiblePersonId = 5,
                            Width = 436.0
                        },
                        new
                        {
                            Id = 16,
                            Floor = 0,
                            Group = 2515,
                            Height = 167.0,
                            Length = 349.0,
                            Num = 251528,
                            PlanNum = 13832,
                            ResponsiblePersonId = 6,
                            Width = 139.0
                        },
                        new
                        {
                            Id = 17,
                            Floor = 2,
                            Group = 2026,
                            Height = 109.0,
                            Length = 407.0,
                            Num = 202636,
                            PlanNum = 31463,
                            ResponsiblePersonId = 6,
                            Width = 120.0
                        },
                        new
                        {
                            Id = 18,
                            Floor = 1,
                            Group = 1890,
                            Height = 486.0,
                            Length = 489.0,
                            Num = 189030,
                            PlanNum = 24290,
                            ResponsiblePersonId = 6,
                            Width = 235.0
                        },
                        new
                        {
                            Id = 19,
                            Floor = 1,
                            Group = 3349,
                            Height = 218.0,
                            Length = 366.0,
                            Num = 334946,
                            PlanNum = 37591,
                            ResponsiblePersonId = 3,
                            Width = 211.0
                        });
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Оборудоввание");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.EquipmentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Типы оборудования");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Права");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "User"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Master"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AcceptanceDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CabId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CompleteDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FromId")
                        .HasColumnType("integer");

                    b.Property<int?>("ImageId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CabId");

                    b.HasIndex("FromId");

                    b.HasIndex("ImageId");

                    b.ToTable("Заявки");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Patronymic")
                        .HasColumnType("text");

                    b.Property<int>("PermissionId")
                        .HasColumnType("integer");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.ToTable("Пользователи");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthday = new DateTime(1994, 3, 18, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_1",
                            Name = "Name-1",
                            Password = "password_1",
                            Patronymic = "Patronymic1",
                            PermissionId = 1,
                            Surname = "Surname-1"
                        },
                        new
                        {
                            Id = 2,
                            Birthday = new DateTime(1993, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_2",
                            Name = "Name-2",
                            Password = "password_2",
                            PermissionId = 1,
                            Surname = "Surname-2"
                        },
                        new
                        {
                            Id = 3,
                            Birthday = new DateTime(1995, 3, 27, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_3",
                            Name = "Name-3",
                            Password = "password_3",
                            Patronymic = "Patronymic3",
                            PermissionId = 2,
                            Surname = "Surname-3"
                        },
                        new
                        {
                            Id = 4,
                            Birthday = new DateTime(1995, 11, 19, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_4",
                            Name = "Name-4",
                            Password = "password_4",
                            Patronymic = "Patronymic4",
                            PermissionId = 1,
                            Surname = "Surname-4"
                        },
                        new
                        {
                            Id = 5,
                            Birthday = new DateTime(2004, 11, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_5",
                            Name = "Name-5",
                            Password = "password_5",
                            PermissionId = 2,
                            Surname = "Surname-5"
                        },
                        new
                        {
                            Id = 6,
                            Birthday = new DateTime(2000, 7, 17, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_6",
                            Name = "Name-6",
                            Password = "password_6",
                            PermissionId = 2,
                            Surname = "Surname-6"
                        },
                        new
                        {
                            Id = 7,
                            Birthday = new DateTime(1990, 9, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_7",
                            Name = "Name-7",
                            Password = "password_7",
                            Patronymic = "Patronymic7",
                            PermissionId = 1,
                            Surname = "Surname-7"
                        },
                        new
                        {
                            Id = 8,
                            Birthday = new DateTime(1995, 11, 19, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_8",
                            Name = "Name-8",
                            Password = "password_8",
                            Patronymic = "Patronymic8",
                            PermissionId = 2,
                            Surname = "Surname-8"
                        },
                        new
                        {
                            Id = 9,
                            Birthday = new DateTime(1997, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_9",
                            Name = "Name-9",
                            Password = "password_9",
                            PermissionId = 2,
                            Surname = "Surname-9"
                        });
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.AccountStat", b =>
                {
                    b.HasOne("WebAPI.DataContext.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.CabEquipment", b =>
                {
                    b.HasOne("WebAPI.DataContext.Models.Cabinet", "Cabinet")
                        .WithMany()
                        .HasForeignKey("CabId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.DataContext.Models.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cabinet");

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.CabPhoto", b =>
                {
                    b.HasOne("WebAPI.DataContext.Models.Cabinet", "Cabinet")
                        .WithMany()
                        .HasForeignKey("CabId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.DataContext.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("ImageAuthor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cabinet");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.Cabinet", b =>
                {
                    b.HasOne("WebAPI.DataContext.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("ResponsiblePersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.Equipment", b =>
                {
                    b.HasOne("WebAPI.DataContext.Models.EquipmentType", "EquipmentType")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EquipmentType");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.Request", b =>
                {
                    b.HasOne("WebAPI.DataContext.Models.Cabinet", "Cabinet")
                        .WithMany()
                        .HasForeignKey("CabId");

                    b.HasOne("WebAPI.DataContext.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("FromId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.DataContext.Models.CabPhoto", "CabPhoto")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.Navigation("CabPhoto");

                    b.Navigation("Cabinet");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.User", b =>
                {
                    b.HasOne("WebAPI.DataContext.Models.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");
                });
#pragma warning restore 612, 618
        }
    }
}
