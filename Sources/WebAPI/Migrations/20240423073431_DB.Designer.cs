// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebAPI.DataContext;

#nullable disable

namespace WebAPI.Migrations
{
    [DbContext(typeof(DB_Context))]
    [Migration("20240423073431_DB")]
    partial class DB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebAPI.DataContext.Models.AccountStat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ExpirationKeyDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SignInKey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SignInKey")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("AccountStats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExpirationKeyDate = new DateTime(2024, 3, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            SignInKey = "cc02ca31-7c33-447e-9177-a78e4ae040e3",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.CabEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CabId")
                        .HasColumnType("integer");

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<int>("EquipId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CabId");

                    b.HasIndex("EquipId");

                    b.ToTable("Оборудование в кабинетах");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.CabPhoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CabId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ImageAuthor")
                        .HasColumnType("integer");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CabId");

                    b.HasIndex("ImageAuthor");

                    b.ToTable("Фотографии кабинета");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.Cabinet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Floor")
                        .HasColumnType("integer");

                    b.Property<int>("Group")
                        .HasColumnType("integer");

                    b.Property<double>("Height")
                        .HasColumnType("double precision");

                    b.Property<double>("Length")
                        .HasColumnType("double precision");

                    b.Property<int>("Num")
                        .HasColumnType("integer");

                    b.Property<int>("PlanNum")
                        .HasColumnType("integer");

                    b.Property<int>("ResponsiblePersonId")
                        .HasColumnType("integer");

                    b.Property<double>("Width")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("ResponsiblePersonId");

                    b.ToTable("Кабинеты");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Floor = 1,
                            Group = 2423,
                            Height = 108.0,
                            Length = 172.0,
                            Num = 216942,
                            PlanNum = 19614,
                            ResponsiblePersonId = 7,
                            Width = 387.0
                        },
                        new
                        {
                            Id = 2,
                            Floor = 1,
                            Group = 3884,
                            Height = 162.0,
                            Length = 484.0,
                            Num = 388427,
                            PlanNum = 23843,
                            ResponsiblePersonId = 1,
                            Width = 330.0
                        },
                        new
                        {
                            Id = 3,
                            Floor = 1,
                            Group = 3374,
                            Height = 281.0,
                            Length = 360.0,
                            Num = 337420,
                            PlanNum = 10371,
                            ResponsiblePersonId = 7,
                            Width = 328.0
                        },
                        new
                        {
                            Id = 4,
                            Floor = 0,
                            Group = 2081,
                            Height = 488.0,
                            Length = 293.0,
                            Num = 208125,
                            PlanNum = 38595,
                            ResponsiblePersonId = 8,
                            Width = 247.0
                        },
                        new
                        {
                            Id = 5,
                            Floor = 0,
                            Group = 1778,
                            Height = 237.0,
                            Length = 231.0,
                            Num = 177821,
                            PlanNum = 27827,
                            ResponsiblePersonId = 4,
                            Width = 311.0
                        },
                        new
                        {
                            Id = 6,
                            Floor = 0,
                            Group = 2765,
                            Height = 125.0,
                            Length = 276.0,
                            Num = 276526,
                            PlanNum = 21421,
                            ResponsiblePersonId = 8,
                            Width = 342.0
                        },
                        new
                        {
                            Id = 7,
                            Floor = 2,
                            Group = 2663,
                            Height = 196.0,
                            Length = 137.0,
                            Num = 266342,
                            PlanNum = 12036,
                            ResponsiblePersonId = 6,
                            Width = 371.0
                        },
                        new
                        {
                            Id = 8,
                            Floor = 0,
                            Group = 2500,
                            Height = 198.0,
                            Length = 208.0,
                            Num = 250036,
                            PlanNum = 11580,
                            ResponsiblePersonId = 3,
                            Width = 285.0
                        },
                        new
                        {
                            Id = 9,
                            Floor = 2,
                            Group = 3406,
                            Height = 175.0,
                            Length = 439.0,
                            Num = 340648,
                            PlanNum = 28929,
                            ResponsiblePersonId = 5,
                            Width = 103.0
                        },
                        new
                        {
                            Id = 10,
                            Floor = 0,
                            Group = 2492,
                            Height = 485.0,
                            Length = 272.0,
                            Num = 249230,
                            PlanNum = 12616,
                            ResponsiblePersonId = 8,
                            Width = 317.0
                        },
                        new
                        {
                            Id = 11,
                            Floor = 1,
                            Group = 3572,
                            Height = 317.0,
                            Length = 466.0,
                            Num = 357219,
                            PlanNum = 14735,
                            ResponsiblePersonId = 6,
                            Width = 202.0
                        },
                        new
                        {
                            Id = 12,
                            Floor = 0,
                            Group = 2509,
                            Height = 291.0,
                            Length = 367.0,
                            Num = 250947,
                            PlanNum = 21029,
                            ResponsiblePersonId = 5,
                            Width = 270.0
                        },
                        new
                        {
                            Id = 13,
                            Floor = 1,
                            Group = 2398,
                            Height = 427.0,
                            Length = 312.0,
                            Num = 239824,
                            PlanNum = 14719,
                            ResponsiblePersonId = 8,
                            Width = 178.0
                        },
                        new
                        {
                            Id = 14,
                            Floor = 0,
                            Group = 2346,
                            Height = 241.0,
                            Length = 107.0,
                            Num = 234623,
                            PlanNum = 27697,
                            ResponsiblePersonId = 3,
                            Width = 247.0
                        },
                        new
                        {
                            Id = 15,
                            Floor = 1,
                            Group = 1656,
                            Height = 290.0,
                            Length = 398.0,
                            Num = 165630,
                            PlanNum = 33875,
                            ResponsiblePersonId = 3,
                            Width = 498.0
                        },
                        new
                        {
                            Id = 16,
                            Floor = 2,
                            Group = 1747,
                            Height = 448.0,
                            Length = 413.0,
                            Num = 174739,
                            PlanNum = 35518,
                            ResponsiblePersonId = 6,
                            Width = 188.0
                        },
                        new
                        {
                            Id = 17,
                            Floor = 2,
                            Group = 3502,
                            Height = 188.0,
                            Length = 297.0,
                            Num = 350228,
                            PlanNum = 36765,
                            ResponsiblePersonId = 7,
                            Width = 331.0
                        },
                        new
                        {
                            Id = 18,
                            Floor = 1,
                            Group = 2518,
                            Height = 148.0,
                            Length = 225.0,
                            Num = 251849,
                            PlanNum = 11370,
                            ResponsiblePersonId = 1,
                            Width = 365.0
                        },
                        new
                        {
                            Id = 19,
                            Floor = 0,
                            Group = 1015,
                            Height = 140.0,
                            Length = 116.0,
                            Num = 101539,
                            PlanNum = 34516,
                            ResponsiblePersonId = 4,
                            Width = 217.0
                        });
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Оборудование");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.EquipmentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Типы оборудования");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Права доступа");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "User"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Master"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AcceptanceDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CabId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CompleteDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FromId")
                        .HasColumnType("integer");

                    b.Property<int?>("ImageId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CabId");

                    b.HasIndex("FromId");

                    b.HasIndex("ImageId");

                    b.ToTable("Заявки");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Patronymic")
                        .HasColumnType("text");

                    b.Property<int>("PermissionId")
                        .HasColumnType("integer");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.ToTable("Пользователи");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthday = new DateTime(1992, 7, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_1",
                            Name = "Name-1",
                            Password = "password_1",
                            PermissionId = 2,
                            Surname = "Surname-1"
                        },
                        new
                        {
                            Id = 2,
                            Birthday = new DateTime(1991, 4, 9, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_2",
                            Name = "Name-2",
                            Password = "password_2",
                            PermissionId = 1,
                            Surname = "Surname-2"
                        },
                        new
                        {
                            Id = 3,
                            Birthday = new DateTime(1994, 8, 22, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_3",
                            Name = "Name-3",
                            Password = "password_3",
                            Patronymic = "Patronymic3",
                            PermissionId = 1,
                            Surname = "Surname-3"
                        },
                        new
                        {
                            Id = 4,
                            Birthday = new DateTime(2004, 10, 26, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_4",
                            Name = "Name-4",
                            Password = "password_4",
                            Patronymic = "Patronymic4",
                            PermissionId = 1,
                            Surname = "Surname-4"
                        },
                        new
                        {
                            Id = 5,
                            Birthday = new DateTime(1999, 7, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_5",
                            Name = "Name-5",
                            Password = "password_5",
                            PermissionId = 1,
                            Surname = "Surname-5"
                        },
                        new
                        {
                            Id = 6,
                            Birthday = new DateTime(1995, 5, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_6",
                            Name = "Name-6",
                            Password = "password_6",
                            Patronymic = "Patronymic6",
                            PermissionId = 2,
                            Surname = "Surname-6"
                        },
                        new
                        {
                            Id = 7,
                            Birthday = new DateTime(1992, 1, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_7",
                            Name = "Name-7",
                            Password = "password_7",
                            Patronymic = "Patronymic7",
                            PermissionId = 1,
                            Surname = "Surname-7"
                        },
                        new
                        {
                            Id = 8,
                            Birthday = new DateTime(2000, 8, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_8",
                            Name = "Name-8",
                            Password = "password_8",
                            Patronymic = "Patronymic8",
                            PermissionId = 2,
                            Surname = "Surname-8"
                        },
                        new
                        {
                            Id = 9,
                            Birthday = new DateTime(2003, 7, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_9",
                            Name = "Name-9",
                            Password = "password_9",
                            PermissionId = 1,
                            Surname = "Surname-9"
                        });
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.AccountStat", b =>
                {
                    b.HasOne("WebAPI.DataContext.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.CabEquipment", b =>
                {
                    b.HasOne("WebAPI.DataContext.Models.Cabinet", "Cabinet")
                        .WithMany()
                        .HasForeignKey("CabId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.DataContext.Models.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cabinet");

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.CabPhoto", b =>
                {
                    b.HasOne("WebAPI.DataContext.Models.Cabinet", "Cabinet")
                        .WithMany()
                        .HasForeignKey("CabId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.DataContext.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("ImageAuthor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cabinet");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.Cabinet", b =>
                {
                    b.HasOne("WebAPI.DataContext.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("ResponsiblePersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.Equipment", b =>
                {
                    b.HasOne("WebAPI.DataContext.Models.EquipmentType", "EquipmentType")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EquipmentType");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.Request", b =>
                {
                    b.HasOne("WebAPI.DataContext.Models.Cabinet", "Cabinet")
                        .WithMany()
                        .HasForeignKey("CabId");

                    b.HasOne("WebAPI.DataContext.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("FromId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.DataContext.Models.CabPhoto", "CabPhoto")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.Navigation("CabPhoto");

                    b.Navigation("Cabinet");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.User", b =>
                {
                    b.HasOne("WebAPI.DataContext.Models.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");
                });
#pragma warning restore 612, 618
        }
    }
}
