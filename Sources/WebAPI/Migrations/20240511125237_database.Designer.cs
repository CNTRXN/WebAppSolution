// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebAPI.DataContext;

#nullable disable

namespace WebAPI.Migrations
{
    [DbContext(typeof(DB_Context))]
    [Migration("20240511125237_database")]
    partial class database
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebAPI.DataContext.Models.AccountStat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ExpirationKeyDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SignInKey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AccountStats");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.Cabinet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Floor")
                        .HasColumnType("integer");

                    b.Property<double>("Height")
                        .HasColumnType("double precision");

                    b.Property<double>("Length")
                        .HasColumnType("double precision");

                    b.Property<int>("Num")
                        .HasColumnType("integer");

                    b.Property<int>("PlanNum")
                        .HasColumnType("integer");

                    b.Property<int>("ResponsiblePersonId")
                        .HasColumnType("integer");

                    b.Property<double>("Width")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("Num")
                        .IsUnique();

                    b.HasIndex("PlanNum")
                        .IsUnique();

                    b.HasIndex("ResponsiblePersonId");

                    b.ToTable("Кабинеты");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Floor = 2,
                            Height = 492.0,
                            Length = 271.0,
                            Num = 216942,
                            PlanNum = 17153,
                            ResponsiblePersonId = 5,
                            Width = 101.0
                        },
                        new
                        {
                            Id = 2,
                            Floor = 0,
                            Height = 364.0,
                            Length = 260.0,
                            Num = 131915,
                            PlanNum = 30890,
                            ResponsiblePersonId = 7,
                            Width = 198.0
                        },
                        new
                        {
                            Id = 3,
                            Floor = 1,
                            Height = 353.0,
                            Length = 191.0,
                            Num = 387825,
                            PlanNum = 14127,
                            ResponsiblePersonId = 2,
                            Width = 355.0
                        },
                        new
                        {
                            Id = 4,
                            Floor = 1,
                            Height = 492.0,
                            Length = 486.0,
                            Num = 120843,
                            PlanNum = 36253,
                            ResponsiblePersonId = 6,
                            Width = 201.0
                        },
                        new
                        {
                            Id = 5,
                            Floor = 0,
                            Height = 419.0,
                            Length = 116.0,
                            Num = 349217,
                            PlanNum = 28042,
                            ResponsiblePersonId = 8,
                            Width = 460.0
                        },
                        new
                        {
                            Id = 6,
                            Floor = 2,
                            Height = 340.0,
                            Length = 386.0,
                            Num = 264117,
                            PlanNum = 32163,
                            ResponsiblePersonId = 4,
                            Width = 157.0
                        },
                        new
                        {
                            Id = 7,
                            Floor = 0,
                            Height = 172.0,
                            Length = 234.0,
                            Num = 182818,
                            PlanNum = 37773,
                            ResponsiblePersonId = 2,
                            Width = 465.0
                        },
                        new
                        {
                            Id = 8,
                            Floor = 2,
                            Height = 147.0,
                            Length = 479.0,
                            Num = 257319,
                            PlanNum = 21704,
                            ResponsiblePersonId = 3,
                            Width = 185.0
                        },
                        new
                        {
                            Id = 9,
                            Floor = 2,
                            Height = 360.0,
                            Length = 336.0,
                            Num = 282626,
                            PlanNum = 22834,
                            ResponsiblePersonId = 8,
                            Width = 183.0
                        },
                        new
                        {
                            Id = 10,
                            Floor = 0,
                            Height = 423.0,
                            Length = 272.0,
                            Num = 287714,
                            PlanNum = 23280,
                            ResponsiblePersonId = 5,
                            Width = 194.0
                        },
                        new
                        {
                            Id = 11,
                            Floor = 0,
                            Height = 201.0,
                            Length = 386.0,
                            Num = 202442,
                            PlanNum = 34131,
                            ResponsiblePersonId = 2,
                            Width = 416.0
                        },
                        new
                        {
                            Id = 12,
                            Floor = 1,
                            Height = 403.0,
                            Length = 265.0,
                            Num = 277010,
                            PlanNum = 21945,
                            ResponsiblePersonId = 8,
                            Width = 267.0
                        },
                        new
                        {
                            Id = 13,
                            Floor = 0,
                            Height = 471.0,
                            Length = 146.0,
                            Num = 269427,
                            PlanNum = 22937,
                            ResponsiblePersonId = 1,
                            Width = 489.0
                        },
                        new
                        {
                            Id = 14,
                            Floor = 1,
                            Height = 287.0,
                            Length = 427.0,
                            Num = 207723,
                            PlanNum = 30789,
                            ResponsiblePersonId = 8,
                            Width = 264.0
                        },
                        new
                        {
                            Id = 15,
                            Floor = 2,
                            Height = 147.0,
                            Length = 163.0,
                            Num = 199818,
                            PlanNum = 31432,
                            ResponsiblePersonId = 6,
                            Width = 402.0
                        },
                        new
                        {
                            Id = 16,
                            Floor = 0,
                            Height = 374.0,
                            Length = 226.0,
                            Num = 331841,
                            PlanNum = 33241,
                            ResponsiblePersonId = 7,
                            Width = 135.0
                        },
                        new
                        {
                            Id = 17,
                            Floor = 1,
                            Height = 364.0,
                            Length = 267.0,
                            Num = 274838,
                            PlanNum = 37085,
                            ResponsiblePersonId = 4,
                            Width = 345.0
                        },
                        new
                        {
                            Id = 18,
                            Floor = 1,
                            Height = 143.0,
                            Length = 138.0,
                            Num = 335516,
                            PlanNum = 28513,
                            ResponsiblePersonId = 1,
                            Width = 357.0
                        },
                        new
                        {
                            Id = 19,
                            Floor = 0,
                            Height = 343.0,
                            Length = 324.0,
                            Num = 101813,
                            PlanNum = 19403,
                            ResponsiblePersonId = 2,
                            Width = 438.0
                        });
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.CabinetEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CabinetId")
                        .HasColumnType("integer");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CabinetId");

                    b.HasIndex("EquipmentId");

                    b.ToTable("Оборудование в кабинетах");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CabinetId = 1,
                            EquipmentId = 1
                        },
                        new
                        {
                            Id = 2,
                            CabinetId = 1,
                            EquipmentId = 1
                        });
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.CabinetFiles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CabinetId")
                        .HasColumnType("integer");

                    b.Property<int?>("FileAuthor")
                        .HasColumnType("integer");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CabinetId");

                    b.HasIndex("FileAuthor");

                    b.ToTable("Файлы кабинета");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InventoryNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("InventoryNumber")
                        .IsUnique();

                    b.HasIndex("TypeId");

                    b.ToTable("Оборудование");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Сис. требования: ",
                            InventoryNumber = "10892",
                            Name = "Монитор",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Сис. требования: ",
                            InventoryNumber = "11090",
                            Name = "Монитор",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Сис. требования: ",
                            InventoryNumber = "10975",
                            Name = "Системный блок",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 4,
                            Description = "Сис. требования: ",
                            InventoryNumber = "11296",
                            Name = "Системный блок",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 5,
                            Description = "Сис. требования: ",
                            InventoryNumber = "12095",
                            Name = "Мышка",
                            TypeId = 1
                        });
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.EquipmentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Типы оборудования");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Электрооборудование"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Мебель"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Инфраструктура"
                        });
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Права доступа");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "User"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Master"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CabId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CompleteDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("FromId")
                        .HasColumnType("integer");

                    b.Property<int>("RequestStatusId")
                        .HasColumnType("integer");

                    b.Property<int>("RequestTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CabId");

                    b.HasIndex("FromId");

                    b.HasIndex("RequestStatusId");

                    b.HasIndex("RequestTypeId");

                    b.ToTable("Заявки");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.RequestEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EquipmentId")
                        .HasColumnType("integer");

                    b.Property<int>("RequestId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("RequestId");

                    b.ToTable("Оборудование заявок");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.RequestFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RequestId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RequestId");

                    b.ToTable("Файлы заявки");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.RequestStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Статус заявки");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            StatusName = "Новая"
                        },
                        new
                        {
                            Id = 2,
                            StatusName = "В обработке"
                        },
                        new
                        {
                            Id = 3,
                            StatusName = "Ожидание материалов"
                        },
                        new
                        {
                            Id = 4,
                            StatusName = "Выполняется"
                        },
                        new
                        {
                            Id = 5,
                            StatusName = "Выполнена"
                        },
                        new
                        {
                            Id = 6,
                            StatusName = "Отклонена"
                        },
                        new
                        {
                            Id = 7,
                            StatusName = "Отложена"
                        },
                        new
                        {
                            Id = 8,
                            StatusName = "Просрочена"
                        });
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.RequestType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Тип заявки");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TypeName = "Ремонт"
                        },
                        new
                        {
                            Id = 2,
                            TypeName = "Тех. обслуживание"
                        },
                        new
                        {
                            Id = 3,
                            TypeName = "Закупка"
                        },
                        new
                        {
                            Id = 4,
                            TypeName = "Установка"
                        },
                        new
                        {
                            Id = 5,
                            TypeName = "Консультация"
                        });
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Patronymic")
                        .HasColumnType("text");

                    b.Property<int>("PermissionId")
                        .HasColumnType("integer");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.HasIndex("PermissionId");

                    b.ToTable("Пользователи");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthday = new DateTime(1994, 11, 9, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_1",
                            Name = "Name-1",
                            Password = "password_1",
                            PermissionId = 1,
                            Surname = "Surname-1"
                        },
                        new
                        {
                            Id = 2,
                            Birthday = new DateTime(2002, 10, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_2",
                            Name = "Name-2",
                            Password = "password_2",
                            PermissionId = 1,
                            Surname = "Surname-2"
                        },
                        new
                        {
                            Id = 3,
                            Birthday = new DateTime(1997, 6, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_3",
                            Name = "Name-3",
                            Password = "password_3",
                            Patronymic = "Patronymic3",
                            PermissionId = 1,
                            Surname = "Surname-3"
                        },
                        new
                        {
                            Id = 4,
                            Birthday = new DateTime(1992, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_4",
                            Name = "Name-4",
                            Password = "password_4",
                            Patronymic = "Patronymic4",
                            PermissionId = 1,
                            Surname = "Surname-4"
                        },
                        new
                        {
                            Id = 5,
                            Birthday = new DateTime(2002, 6, 18, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_5",
                            Name = "Name-5",
                            Password = "password_5",
                            Patronymic = "Patronymic5",
                            PermissionId = 1,
                            Surname = "Surname-5"
                        },
                        new
                        {
                            Id = 6,
                            Birthday = new DateTime(1991, 4, 6, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_6",
                            Name = "Name-6",
                            Password = "password_6",
                            PermissionId = 1,
                            Surname = "Surname-6"
                        },
                        new
                        {
                            Id = 7,
                            Birthday = new DateTime(2002, 8, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_7",
                            Name = "Name-7",
                            Password = "password_7",
                            PermissionId = 1,
                            Surname = "Surname-7"
                        },
                        new
                        {
                            Id = 8,
                            Birthday = new DateTime(1993, 7, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_8",
                            Name = "Name-8",
                            Password = "password_8",
                            PermissionId = 1,
                            Surname = "Surname-8"
                        },
                        new
                        {
                            Id = 9,
                            Birthday = new DateTime(2000, 10, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            Login = "login_9",
                            Name = "Name-9",
                            Password = "password_9",
                            Patronymic = "Patronymic9",
                            PermissionId = 1,
                            Surname = "Surname-9"
                        });
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.AccountStat", b =>
                {
                    b.HasOne("WebAPI.DataContext.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.Cabinet", b =>
                {
                    b.HasOne("WebAPI.DataContext.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("ResponsiblePersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.CabinetEquipment", b =>
                {
                    b.HasOne("WebAPI.DataContext.Models.Cabinet", "Cabinet")
                        .WithMany()
                        .HasForeignKey("CabinetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.DataContext.Models.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cabinet");

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.CabinetFiles", b =>
                {
                    b.HasOne("WebAPI.DataContext.Models.Cabinet", "Cabinet")
                        .WithMany()
                        .HasForeignKey("CabinetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.DataContext.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("FileAuthor");

                    b.Navigation("Cabinet");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.Equipment", b =>
                {
                    b.HasOne("WebAPI.DataContext.Models.EquipmentType", "EquipmentType")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EquipmentType");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.Request", b =>
                {
                    b.HasOne("WebAPI.DataContext.Models.Cabinet", "Cabinet")
                        .WithMany()
                        .HasForeignKey("CabId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.DataContext.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("FromId");

                    b.HasOne("WebAPI.DataContext.Models.RequestStatus", "RequestStatus")
                        .WithMany()
                        .HasForeignKey("RequestStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.DataContext.Models.RequestType", "RequestType")
                        .WithMany()
                        .HasForeignKey("RequestTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cabinet");

                    b.Navigation("RequestStatus");

                    b.Navigation("RequestType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.RequestEquipment", b =>
                {
                    b.HasOne("WebAPI.DataContext.Models.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.DataContext.Models.Request", "Request")
                        .WithMany()
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.RequestFile", b =>
                {
                    b.HasOne("WebAPI.DataContext.Models.Request", "Request")
                        .WithMany()
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Request");
                });

            modelBuilder.Entity("WebAPI.DataContext.Models.User", b =>
                {
                    b.HasOne("WebAPI.DataContext.Models.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");
                });
#pragma warning restore 612, 618
        }
    }
}
