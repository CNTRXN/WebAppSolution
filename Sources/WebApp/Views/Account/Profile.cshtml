@using ModelLib.DTO;
@using WebApp.Settings;
@using System.Security.Claims;

@model UserDTO;

@{
    Layout = "_Profile";

    var isAuth = (Context.User.Identity != null && Context.User.Identity.IsAuthenticated);

    int? userId = null;
    if (isAuth)
    {
        if (Context.User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Sid)?.Value is string userIdAsString)
            userId = int.Parse(userIdAsString);
    }

    bool isCurrentUser = (userId != null && userId == Model.Id) && isAuth;
}

@section ProfileContent{
    <div class="profile center-element-horizontal">
        <div id="profileHeader"></div>
        <div id="profileAvatar">
            <img id="profile_image" />
        </div>

        <div id="profileContent">
            <div class="profileUserNSP_PERM">
                <div id="profileUserNSP">
                    <p class="profileUserNSPText" id="profile_userSurname">@Model.Surname</p>
                    <p class="profileUserNSPText" id="profile_userName">@Model.Name</p>
                    <p class="profileUserNSPText" id="profile_userPatronymic">@Model.Patronymic</p>
                </div>

                <p class="profileUserNSPText_Prim" id="profile_userPrimission">@Model.Permission.Name</p>

                @{

                    if (isCurrentUser || Context.User.IsInRole("Admin"))
                    {
                        <button class="defaultButton" id="editProfile" onclick="openEditor(infoType.user, sendType.edit, @Model.Id)">Редактировать</button>
                    }
                }
               
            </div>
            <div class="profileUserInfo">
                <div id="userCabinets">
                    <p id="cabientInfotitle">Кабинеты пользователя</p>
                    @{
                        var cabinets = await AppSettings.Api.Client.GetFromJsonAsync<List<CabinetDTO>>(AppSettings.Api.ApiRequestUrl(ApiRequestType.Cabinet, $"cabinets-by-user={Model.Id}"));

                        if (cabinets != null)
                        {
                            foreach (var cabinet in cabinets)
                            {
                                <button class="defaultButton toCabinet" onclick="window.location = '../cabinets/cabientId=@cabinet.Id'">
                                    №@cabinet.Num
                                </button>
                            }
                        }
                        else
                        {
                            <p>Кабинеты не найдены</p>
                        }
                    }
                    
                </div>
            </div>
        </div>

    </div>
}

@section ProfileScripts{
    <script src="~/js/jquery-3.7.1.min.js" type="text/javascript"></script>
    <script src="~/js/RightMenu.js" type="text/javascript"></script>

    <link href="~/css/Profile.css" rel="stylesheet" type="text/css" />
    <link href="~/css/RightMenu.css" rel="stylesheet" type="text/css" />
    <link href="~/css/Tools.css" rel="stylesheet" type="text/css" />
    <link href="~/css/ElementsStyle.css" rel="stylesheet" type="text/css" />
    <link href="~/css/InfoEditor.css" rel="stylesheet" type="text/css" />
    <script src="~/js/InfoEditor.js" type="text/javascript"></script>
    <script src="~/js/signalr.js"></script>
    <script src="~/js/jquery.signalR.min.js"></script>
}