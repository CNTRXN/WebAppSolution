@using WebApp.Models.DTO
@using System.Security.Claims;
@*@model UserDTO;*@

@{
    //var userModel = Model;//ViewData["UserModel"] as UserDTO;

    dynamic? userModel = null;


    var userIsAuth = Context.User.Identity != null && Context.User.Identity.IsAuthenticated;//&& userModel != null;

    if(userIsAuth)
    {
        userModel = new
        {
            Name = Context.User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Name)?.Value,
            Surname = Context.User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Surname)?.Value,
            PermissionName = Context.User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Role)?.Value,
        };

        // if (Context.User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Sid)?.Value is string userIdAsString)
        //     userModel.Id = int.Parse(userIdAsString);
    }
}

<div id="rightMenu">
    <div id="rmMiniProfile">
        <div>
            <div id="rmUpSector">
                @{
                    if (userIsAuth)
                    {
                        <img class="hidden-elem" id="miniProfileImg" />
                    }
                }
                <button id="closeMenuButton">≡</button>
            </div>
            @{
                if (userIsAuth)
                {
                    <div class="hidden-elem" id="userMiniProfileInfo">

                        <div>
                            <p class="miniprofile-name-text" id="userName">@userModel?.Name</p>
                            <p class="miniprofile-name-text" id="userSurname">@userModel?.Surname</p>
                        </div>
                        <p id="userPrem">@userModel?.PermissionName</p>
                    </div>

                    <div class="hidden-elem buttons-container">
                        <button class="rightMenuButton2" id="rmEditProfile">Редактировать</button>
                        <button class="rightMenuButton2" id="rmExitProfile" onclick="window.location = '../logout'">Выйти</button>
                    </div>
                }
                else
                {
                    <div class="hidden-elem buttons-container">
                        <button class="rightMenuButton2" id="rmEnterProfile" onclick="window.location = '../auth'">Войти</button>
                    </div>
                }
            }
        </div>
    </div>
    <hr class="hidden-elem" />
    <div class="hidden-elem menu-buttons">
        <div class="buttons-container" id="unstableButtons">
            <button class="rightMenuButton2" onclick="window.location = '/'">Главная</button>
            @{
                if (userIsAuth)
                {
                    if (Context.User.IsInRole("User"))
                    {
                        <button class="rightMenuButton2" id="myRequests">Мои заявки</button>
                    }

                    if (Context.User.IsInRole("Master"))
                    {
                        <button class="rightMenuButton2" id="newRequests">Заявки</button>
                    }

                    <button class="rightMenuButton2" onclick="window.location = '../cabinets'">Кабинеты</button>
                }
            }
        </div>
        <hr />
        <div class="buttons-container" id="constantButtons">
            <button class="rightMenuButton2" onclick="window.location = '@Url.Action("About","Info")'">About</button>
            <button class="rightMenuButton2" onclick="window.location = '@Url.Action("Login","Account")'">LoginPage</button>
            <button class="rightMenuButton2" onclick="window.location = '@Url.Action("Registration","Account")'">Registration</button>
            <button class="rightMenuButton2" onclick="window.location = '@Url.Action("CabInfo","Data")'" disabled>Cabinet Info</button>
        </div>
    </div>

    <template id="defButton">
        <button id="rightMenuButton" />
    </template>
</div>