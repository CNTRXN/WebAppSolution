@using ModelLib.Model
@using WebApp.Settings;
@using WebApp.Models;
@using System.Collections;
@using WebApp.Models.PageModels;
@using ModelLib.Convert.Table;
@using ModelLib.DTO;

@model CabInfoPage;

@{
    TranslateMetadata<IMetaData> equipmentMeta = new();


    switch (Model.SelectedList)
    {
        case "Equipment":
            equipmentMeta.Assign<EquipmentDTO>();
            break;
        // case "TestData":
        //     equipmentMeta.Assign<TestData>();
        //     break;
    }
}

<div id="table-meta-data">
    <div id="tableTitleContainer">
        <p id="tableTitle">
            @equipmentMeta.TableName
        </p>
        <form method="post" @* action="/equip-search-@Model.Cabinet.Id" *@>
            <input type="search" id="search-data" name="searchField" placeholder="Поиск..." value="@Model.SearchQuery" />
        </form>
    </div>
    <div id="tableHeader">
        @{
            int i = 0;

            int itemHeaderWidth = (int)(100 / (equipmentMeta.PropsCount + 1));

            foreach (var item in equipmentMeta.PropName)
            {
                <button class="table-header"
                        id="table-header-@i"
                        style="width: @itemHeaderWidth%">
                    @item.Value
                </button>
                i++;
            }

            i = 0;
        }
    </div>
</div>
<div id="tableContainer">
    @{
        DrawTable();

        void DrawTable()
        {
            int j = 0;
            int h = 0;

            IEnumerable<dynamic> currentList = Model.SelectedList switch
            {
                "Equipment" => Model.Equipments.Cast<dynamic>().ToList(),
                "TestData" => Model.Equipments.Cast<dynamic>().ToList(),
                _ => []
            };

            foreach (var eqiup in currentList)
            {
                var id = h + 1;

                <div class="tableItem" id="table-item-@h" data-id="@id">
                    @{
                        TableValueResult data = new();
                        if (equipmentMeta.Type == typeof(EquipmentDTO))
                            data = equipmentMeta.GetValues<EquipmentDTO>(eqiup, withNotInclude: true);

                        // if (equipmentMeta.Type == typeof(TestData))
                        //     data = equipmentMeta.GetValues<TestData>(eqiup);

                        int equipId = 0;

                        foreach (var prop in eqiup.GetType().GetProperties())
                        {
                            if (prop.Name == "Id")
                                if (data.HasValue("Id"))
                                {
                                    equipId = int.Parse(data["Id"]?.ToString() ?? string.Empty);
                                    continue;
                                }

                            if (data[prop.Name] != null)
                            {
                                <p class="table-prop-name"
                                   id="table-item-@prop.Name"
                                   style="width: @itemHeaderWidth%">
                                    @{
                                        var tbValue = data[prop.Name];

                                        if (tbValue is EquipmentType equipmentT)
                                        {
                                            @equipmentT.Name
                                        }
                                        else
                                        {
                                            @tbValue
                                        }
                                    }
                                </p> 
                            }

                            j++;
                        }
                        <div class="table-prop-name" style="width: @itemHeaderWidth%">
                            <button class="defaultButton" onclick="openRequestForm([@equipId])" title="Добавить к заявке">+📝</button>@*@equipId*@
                        </div>
                    }
                </div>

                j = 0;
                h++;
            }

            h = 0;
        }
    }
</div>
<div id="table-usings">
    <button class="defaultButton" id="add-button">
        +
    </button>
</div>